var browser, result;
browser = new Browser(Browser.chromeOptions());

try {
    var params = JSON.parse(value); // Parse the JSON string passed from Zabbix
    var webUrl = params.webUrl;
    var username = params.username;
    var password = params.password;

    browser.navigate(webUrl);
    browser.collectPerfEntries("open page");

    // Find and fill username
    var el = browser.findElement("xpath", "//input[@id='name']");
    if (el === null) {
        throw Error("cannot find name input field");
    }
    el.sendKeys(username);

    // Find and fill password
    el = browser.findElement("xpath", "//input[@id='password']");
    if (el === null) {
        throw Error("cannot find password input field");
    }
    el.sendKeys(password);

    // Find and click the login button
    el = browser.findElement("xpath", "//button[@id='enter']");
    if (el === null) {
        throw Error("cannot find login button");
    }
    el.click();

    // Collect performance data after login
    browser.collectPerfEntries("login");

    // Navigate to Reports -> System information
    el = browser.findElement("xpath", "//a[contains(text(),'Reports')]");
    if (el === null) {
        throw Error("cannot find Reports menu");
    }
    el.click();

    el = browser.findElement("xpath", "//a[contains(text(),'System information')]");
    if (el === null) {
        throw Error("cannot find System information submenu");
    }
    el.click();

    // Find the required server performance row and get the value
    nvps = browser.findElement("xpath", "//tr[th[contains(text(), 'Required server performance, new values per second')]]/td[1]");
    totalHosts = browser.findElement("xpath", "//tr[th[contains(text(), 'Number of hosts (enabled/disabled)')]]/td[1]");
    enabledHosts = browser.findElement("xpath", "//tr[th[contains(text(), 'Number of hosts (enabled/disabled)')]]/td[2]/span[1]");
    disabledHosts = browser.findElement("xpath", "//tr[th[contains(text(), 'Number of hosts (enabled/disabled)')]]/td[2]/span[2]");
    numberOfTemplates = browser.findElement("xpath", "//tr[th[contains(text(), 'Number of templates')]]/td[1]");
    totalItems = browser.findElement("xpath", "//tr[th/span[contains(text(), 'Number of items (enabled/disabled/not supported)')]]/td[1]");

    enabledItems = browser.findElement("xpath", "//tr[th/span[contains(text(), 'Number of items (enabled/disabled/not supported)')]]/td[2]/span[1]");
    disabledItems = browser.findElement("xpath", "//tr[th/span[contains(text(), 'Number of items (enabled/disabled/not supported)')]]/td[2]/span[2]");
    nsItems = browser.findElement("xpath", "//tr[th/span[contains(text(), 'Number of items (enabled/disabled/not supported)')]]/td[2]/span[3]");
    if (el === null) {
        throw Error("cannot find required server performance row");
    }
    var performanceValue = nvps.getText();
    var totalHosts = totalHosts.getText();
    var enabledHosts = enabledHosts.getText();
    var disabledHosts = disabledHosts.getText();
    var numberOfTemplates = numberOfTemplates.getText();
    var totalItems = totalItems.getText();
    var enabledItems = enabledItems.getText();
    var disabledItems = disabledItems.getText();
    var nsItems = nsItems.getText();

    // Find and click the logout button
    el = browser.findElement("xpath", "//a[contains(text(),'Sign out')]");
    if (el === null) {
        throw Error("cannot find logout button");
    }
    el.click();

    // Collect performance data after logout
    browser.collectPerfEntries("logout");

    // Set result with the performance value
    result = browser.getResult();
    result.performanceValue = performanceValue;
    result.totalHosts = totalHosts;
    result.enabledHosts = enabledHosts;
    result.disabledHosts = disabledHosts;
    result.numberOfTemplates = numberOfTemplates;
    result.totalItems = totalItems;
    result.enabledItems = enabledItems;
    result.disabledItems = disabledItems;
    result.nsItems = nsItems;

} catch (err) {
    if (!(err instanceof BrowserError)) {
        browser.setError(err.message);
    }
    result = browser.getResult();
    result.error.screenshot = browser.getScreenshot();
} finally {
    return JSON.stringify(result);
}
